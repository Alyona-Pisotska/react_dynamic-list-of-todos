{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoFilter","TodoStatus","changeQuery","handleChangeTodos","useState","searchValue","setSearchValue","changeSearchValue","value","onSortTodos","event","Active","filter","Completed","onChange","target","All","placeholder","length","style","pointerEvents","Loader","emptyUser","name","email","phone","TodoModal","closeModal","user","setUser","isLoading","setIsLoading","useEffect","userId","currentUser","finally","href","emptyTodo","App","setTodos","setSelectedTodo","query","setQuery","todosFromServer","callback","a","visibleTodos","useMemo","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51adca2f.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectTodo: (value: Todo) => void,\n  selectedTodo: Todo,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames(\n            { 'has-background-info-light': selectedTodo.id === todo.id },\n          )}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames(\n                todo.completed ? 'has-text-success' : 'has-text-danger',\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            {selectedTodo.id === todo.id\n              ? (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              ) : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => selectTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getActiveTodos = () => {\n  return getTodos()\n    .then(todos => todos.filter(todo => !todo.completed));\n};\n\nexport const getCompletedTodos = () => {\n  return getTodos()\n    .then(todos => todos.filter(todo => todo.completed));\n};\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState } from 'react';\nimport { getActiveTodos, getCompletedTodos, getTodos } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  changeQuery: (value: string) => void,\n  handleChangeTodos: (value: Promise<Todo[]>) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  changeQuery,\n  handleChangeTodos,\n}) => {\n  const [searchValue, setSearchValue] = useState('');\n  const changeSearchValue = (value: string) => {\n    changeQuery(value);\n    setSearchValue(value);\n  };\n\n  enum TodoStatus {\n    All = 'all',\n    Active = 'active',\n    Completed = 'completed',\n  }\n\n  const onSortTodos = (event: string) => {\n    switch (event) {\n      case TodoStatus.Active:\n        return handleChangeTodos(getActiveTodos());\n      case TodoStatus.Completed:\n        return handleChangeTodos(getCompletedTodos());\n      default:\n        return handleChangeTodos(getTodos());\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => onSortTodos(event.target.value)}\n          >\n            <option value={TodoStatus.All}>{TodoStatus.All}</option>\n            <option value={TodoStatus.Active}>{TodoStatus.Active}</option>\n            <option value={TodoStatus.Completed}>{TodoStatus.Completed}</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchValue}\n          onChange={(event) => changeSearchValue(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchValue.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              aria-label=\"delete\"\n              className=\"delete\"\n              onClick={() => changeSearchValue('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  closeModal: () => void,\n};\n\nconst emptyUser = {\n  id: 0,\n  name: '',\n  email: '',\n  phone: '',\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, closeModal }) => {\n  const [user, setUser] = useState<User>(emptyUser);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(todo.userId)\n      .then(currentUser => setUser(currentUser))\n      .finally(() => setIsLoading(false));\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n              <button\n                type=\"button\"\n                aria-label=\"close\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={closeModal}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nconst emptyTodo = {\n  completed: false,\n  id: 0,\n  title: '',\n  userId: 0,\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo>(emptyTodo);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      });\n  }, []);\n\n  const handleChangeTodos = async (callback: Promise<Todo[]>) => {\n    setTodos(await callback);\n  };\n\n  const showModal = (todo: React.SetStateAction<Todo>) => setSelectedTodo(todo);\n  const closeModal = () => setSelectedTodo(emptyTodo);\n\n  const getVisibleTodos = () => todos\n    .filter(todo => todo.title.toLowerCase().includes(query));\n\n  const visibleTodos = useMemo(\n    getVisibleTodos,\n    [todos, query],\n  );\n\n  const changeQuery = (value: string) => setQuery(value.toLowerCase());\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                changeQuery={changeQuery}\n                handleChangeTodos={handleChangeTodos}\n              />\n            </div>\n\n            {!visibleTodos.length\n              ? <Loader />\n              : (\n                <div className=\"block\">\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    selectTodo={showModal}\n                  />\n                </div>\n              )}\n          </div>\n        </div>\n      </div>\n      {selectedTodo.id\n        && <TodoModal todo={selectedTodo} closeModal={closeModal} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}