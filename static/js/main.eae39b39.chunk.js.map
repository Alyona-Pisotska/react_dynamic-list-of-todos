{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoFilter","changeQuery","handleChangeTodos","useState","searchValue","setSearchValue","changeSearchValue","value","onChange","event","target","filter","placeholder","length","style","pointerEvents","Loader","emptyUser","name","email","phone","TodoModal","closeModal","user","setUser","isLoading","setIsLoading","useEffect","userId","currentUser","finally","href","emptyTodo","App","setTodos","setSelectedTodo","query","setQuery","todosFromServer","callback","a","visibleTodos","useMemo","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eae39b39.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectTodo: (value: Todo) => void,\n  selectedTodo: Todo,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames(\n            selectedTodo.id === todo.id ? 'has-background-info-light' : '',\n          )}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames(\n                todo.completed ? 'has-text-success' : 'has-text-danger',\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            {selectedTodo.id === todo.id\n              ? (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              ) : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => selectTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getActiveTodos = () => {\n  return getTodos()\n    .then(todos => todos.filter(todo => !todo.completed));\n};\n\nexport const getCompletedTodos = () => {\n  return getTodos()\n    .then(todos => todos.filter(todo => todo.completed));\n};\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState } from 'react';\nimport { getActiveTodos, getCompletedTodos, getTodos } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  changeQuery: (value: string) => void,\n  handleChangeTodos: (value: Promise<Todo[]>) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  changeQuery,\n  handleChangeTodos,\n}) => {\n  const [searchValue, setSearchValue] = useState('');\n  const changeSearchValue = (value: string) => {\n    changeQuery(value);\n    setSearchValue(value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              switch (event.target.value) {\n                case 'active':\n                  return handleChangeTodos(getActiveTodos());\n                case 'completed':\n                  return handleChangeTodos(getCompletedTodos());\n                default:\n                  return handleChangeTodos(getTodos());\n              }\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchValue}\n          onChange={(event) => changeSearchValue(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchValue.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => changeSearchValue('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  closeModal: () => void,\n};\n\nconst emptyUser = {\n  id: 0,\n  name: '',\n  email: '',\n  phone: '',\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, closeModal }) => {\n  const [user, setUser] = useState<User>(emptyUser);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(todo.userId)\n      .then(currentUser => setUser(currentUser))\n      .finally(() => setIsLoading(false));\n  }, [todo.userId]);\n\n  return (\n    <>\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n        {isLoading\n          ? <Loader />\n          : (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${todo.id}`}\n                </div>\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={closeModal}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {todo.title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {todo.completed\n                    ? <strong className=\"has-text-success\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>}\n\n                  {' by '}\n\n                  <a href={`mailto:${user.email}`}>\n                    {user.name}\n                  </a>\n                </p>\n              </div>\n            </div>\n          )}\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nconst emptyTodo = {\n  completed: false,\n  id: 0,\n  title: '',\n  userId: 0,\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo>(emptyTodo);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      });\n  }, []);\n\n  const handleChangeTodos = async (callback: Promise<Todo[]>) => {\n    setTodos(await callback);\n  };\n\n  const showModal = (todo: React.SetStateAction<Todo>) => setSelectedTodo(todo);\n  const closeModal = () => setSelectedTodo(emptyTodo);\n\n  const getVisibleTodos = () => todos\n    .filter(todo => todo.title.toLowerCase().includes(query));\n\n  const visibleTodos = useMemo(\n    getVisibleTodos,\n    [todos, query],\n  );\n\n  const changeQuery = (value: string) => setQuery(value.toLowerCase());\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                changeQuery={changeQuery}\n                handleChangeTodos={handleChangeTodos}\n              />\n            </div>\n\n            {!visibleTodos.length\n              ? <Loader />\n              : (\n                <div className=\"block\">\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    selectTodo={showModal}\n                  />\n                </div>\n              )}\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo.id !== 0\n        && <TodoModal todo={selectedTodo} closeModal={closeModal} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}